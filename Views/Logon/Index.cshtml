@{
    ViewBag.Title = "Index";
    Session["Page"] = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@using METRO.Models;

@model METRO.Models.CustomerMetaData

<head>
    <title>METRO</title>
    <script src="~/Scripts/jquery.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</head>


<body>

    <section id="form">
        <!--form-->
        <div class="container">
            <div class="row">
                <div class="col-sm-4 col-sm-offset-1">
                    <div class="login-form">
                        <!--login form-->
                        <h2>Login to your account</h2>

                        <input type="email" class="form-control" placeholder="Email Address" name="email" id="logEmail" required />
                        <br />
                        <input type="password" class="form-control" placeholder="Password" name="password" id="logPass" required />
                        <br />
                        <button id="logButton" class="btn btn-default" onclick="logCheck()">Login</button>
                        <br />
                        <label id="lognotif" style="color:orangered; font-family:'Times New Roman', Times, serif"></label>

                    </div><!--/Logon form-->
                </div>
                <div class="col-sm-1">
                    <h2 class="or">OR</h2>
                </div>
                <div class="col-sm-5">
                    <div class="signup-form">
                        <!--sign up form-->
                        <h2>New User Signup!</h2>
                        @using (Html.BeginForm("UserSignup", "Logon", FormMethod.Post, new { onsubmit = "return check()" }))
                        {
                            
                            @Html.ValidationSummary(true);

                            <span>First Name<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_firstname)
                            @Html.ValidationMessageFor(c => c.customer_firstname, "", new { style = "color:orangered" })
                            <br />                           

                            <span>Last Name<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_lastname)
                            @Html.ValidationMessageFor(c => c.customer_lastname, "", new { style = "color:orangered" })
                            <br />
                            
                            <span>Email<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_email, new { type="email"})
                            @Html.ValidationMessageFor(c => c.customer_email, "", new { style = "color:orangered" })
                            <br />
                          
                            <span>Male</span>
                            @Html.RadioButtonFor(c => c.customer_gender, "Male", new { @class = "glyphicon", @checked = "checked" })
                               
                            
                            <span>Female</span>
                            @Html.RadioButtonFor(c => c.customer_gender, "Female", new { @class = "glyphicon" })
                            <br />
                            
                            <span>Address<label>*</label></span>
                            @Html.TextAreaFor(c => c.customer_address);
                            @Html.ValidationMessageFor(c => c.customer_address, "", new { style = "color:orangered" })
                            <br />
                            
                            <span>City<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_city)
                            @Html.ValidationMessageFor(c => c.customer_city, "", new { style = "color:orangered" })
                            <br />
                            
                            <span>Telephone<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_telephone, new { type = "number" })
                            @Html.ValidationMessageFor(c => c.customer_telephone, "", new { style = "color:orangered" })
                            <br />
                            
                            <span>Mobile<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_mobile, new { type = "number" })
                            @Html.ValidationMessageFor(c => c.customer_mobile, "", new { style = "color:orangered" })
                            <br />
                            
                            <span>Password<label>*</label></span>
                            @Html.TextBoxFor(c => c.customer_password, new { type = "password" })
                            @Html.ValidationMessageFor(c => c.customer_password, "", new { style = "color:orangered" })
                            <br />
                            
                            <input type="password" placeholder="Confirm Passowrd" name="customer_password2" id="pass2" required />

                            <button type="submit" class="btn btn-default">Signup</button>

                          
                        }

                        <label id="notif" style="color:orangered; font-family:'Times New Roman', Times, serif"></label>
                        <label id="emailnotif" style="font-family:'Times New Roman', Times, serif"></label>

                    </div><!--/sign up form-->
                </div>
            </div>
        </div>
    </section><!--/form-->
</body>
<script>
    function check() {
        var pass1 = document.getElementById('customer_password');
        var pass2 = document.getElementById('pass2');
        var message = document.getElementById('notif');
        var status = document.getElementById('emailnotif').innerText;

        if (pass1.value != pass2.value) {
            message.innerHTML = "Passwords Do Not Match!"
            return false;
        }
        else if (status == "Email is not available!") {
            message.innerHTML = "";
            return false;
        }

        else
            return true;
    }
    document.getElementById("customer_password").onchange = function () {
        var message = document.getElementById('notif');
        message.innerHTML = "";
    };
    document.getElementById("pass2").onchange = function () {
        var message = document.getElementById('notif');
        message.innerHTML = "";
    };


    document.getElementById("pass1").onclick = function () {
        myFunction()
    };
    function myFunction() {
        var name = $("#customer_email").val();
        var status = $("#emailnotif");
        status.html("Checking....");

        $.post("/Logon/CheckEmail", { username: name },
            function (data) {
                if (data == "true") {
                    status.text("Email is not available!");
                }
                else {
                    status.text("Email is available!");
                }
            });
    }
    document.getElementById("logButton").onclick = function () {
        logCheck()
    }

    function loginCheck() {

        var status = document.getElementById('lognotif').innerText;
        if (status == "Wrong Email or Password!") {
            return false;
        }
        else
            return true;
    }

    function logCheck() {
        var email = $("#logEmail").val();
        var password = $("#logPass").val();
        var status = $("#lognotif");
        status.html("Checking....");

        $.post("/Logon/UserLogin", { email: email, password: password },
            function (data) {
                if (data == "false") {
                    status.text("Wrong Email or Password!");
                }
                else {
                    window.location.assign("/Logon/UserFound?form=" + email);
                }
            });
    }
</script>
