
@{
    ViewBag.Title = "EditPro";
    Layout = "~/Views/Shared/_Admin_Header.cshtml";
}
@using METRO.Models;
@model IEnumerable<METRO.Models.catagory>

@{
    List<product> x = ViewBag.EditPro;
    List<string> str = ViewBag.ProCats;
}


<div id="content" class="col-lg-10 col-sm-10">
    <!-- content starts -->
    <div>
        <ul class="breadcrumb">
            <li>
                <a href="/Admin/Dashboard">Home</a>
            </li>
            <li>
                <a href="/Admin/Products">Products</a>
            </li>
        </ul>
    </div>

    <div class="row">
        <div class="box col-md-12">
            <div class="box-inner">
                <div class="box-header well" data-original-title="">
                    <h2><i class="glyphicon glyphicon-edit"></i> Add Product</h2>

                </div>
                <div class="box-content">
                    
                    <form action="/Admin/UpdateProduct" enctype="multipart/form-data" method="post" onsubmit="return check()">
                        <input type="text" value="@x.ElementAt(0).product_id" name="product_id" hidden/>
                        <div class="form-group">
                            <label>Title</label>
                            <input type="text" name="product_name" class="form-control" value="@x.ElementAt(0).product_name.ToString().Trim()" required />
                        </div>
                        <div class="form-group">
                            <label>Price</label>
                            <input type="number" name="product_price" class="form-control" value="@x.ElementAt(0).product_price.ToString().Trim()" required />
                        </div>
                        <div class="form-group">
                            <label>Decription</label>
                            <textarea name="product_description" class="form-control autogrow" style="height:100px" required>@x.ElementAt(0).product_description.ToString().Trim()</textarea>
                        </div>
                        <div class="form-group">
                            <label>OFF</label>
                            <input type="number" name="product_off" class="form-control" value="@x.ElementAt(0).product_off.ToString().Trim()" required />
                        </div>
                        <label for="exampleInputEmail1">Catagories</label><br />
                        <table class="table">
                            @for (int i = 0; i < Model.Count(); )
                            {
                                <tr>
                                    @for (int j = 0; j < 4 && i < Model.Count(); i++, j++)
                                    {
                                        if (str.Contains(Model.ElementAt(i).catagories_id))
                                        {
                                            <td>
                                                <label class="checkbox-inline"><input type="checkbox" name="chk+@Model.ElementAt(i).catagories_id" checked>@Model.ElementAt(i).catagories_name</label>
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                <label class="checkbox-inline"><input type="checkbox" name="chk+@Model.ElementAt(i).catagories_id">@Model.ElementAt(i).catagories_name</label>
                                            </td>
                                        }


                                    }
                                </tr>
                            }
                        </table>

                        <label style="font-weight:100"><strong>NOTE!</strong> Image size should be less than 2MB & Ext : .png / .jpg / .jpeg</label>
                        <div class="form-group">
                            <label for="exampleInputFile">Add Full Image</label>
                            <input type="file" id="fullimage" name="fullimage" required>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputFile">Add Small Image 1</label>
                            <input type="file" id="image1" name="image1" required>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputFile">Add Small Image 2</label>
                            <input type="file" id="image2" name="image2" required>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputFile">Add Small Image 3</label>
                            <input type="file" id="image3" name="image3" required>
                        </div>

                        <button type="submit" class="btn btn-default">Submit</button>
                        <br />
                        <br />
                    </form>



                </div>
            </div>
        </div>
        <!--/span-->
    </div><!--/row-->
    <!-- content ends -->
</div><!--/#content.col-md-0-->
<script>
    function check() {
        //check whether browser fully supports all File API
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            //get the file size and file type from file input field
            var fsizef = $('#fullimage')[0].files[0].size;
            var ftypef = $('#fullimage')[0].files[0].type;
            var fnamef= $('#fullimage')[0].files[0].name;

            var fsize1 = $('#image1')[0].files[0].size;
            var ftype1 = $('#image1')[0].files[0].type;
            var fname1 = $('#image1')[0].files[0].name;

            var fsize2 = $('#image2')[0].files[0].size;
            var ftype2 = $('#image2')[0].files[0].type;
            var fname2 = $('#image2')[0].files[0].name;

            var fsize3 = $('#image3')[0].files[0].size;
            var ftype3 = $('#image3')[0].files[0].type;
            var fname3 = $('#image3')[0].files[0].name;

            switch (ftypef) {
                case 'image/png':
                case 'image/gif':
                case 'image/jpeg':
                case 'image/pjpeg':
                    break;
                default:
                    {
                        alert('Unsupported File! : Full Image');
                        return false;
                    }
            }
            switch (ftype1) {
                case 'image/png':
                case 'image/gif':
                case 'image/jpeg':
                case 'image/pjpeg':
                    break;
                default:
                    {
                        alert('Unsupported File! : Image 1');
                        return false;
                    }
            }
            switch (ftype2) {
                case 'image/png':
                case 'image/gif':
                case 'image/jpeg':
                case 'image/pjpeg':
                    break;
                default:
                    {
                        alert('Unsupported File! : Image 2');
                        return false;
                    }
            }
            switch (ftype3) {
                case 'image/png':
                case 'image/gif':
                case 'image/jpeg':
                case 'image/pjpeg':
                    break;
                default:
                    {
                        alert('Unsupported File! : Image 3');
                        return false;
                    }
            }


            if (fsizef > 2000000)
            {
                alert("FULL IMAGE Type :" + ftypef + " | " + fsizef + " bites\n(File: " + fnamef + ") Bigger than 2MB!");
                return false;
            }

            if (fsize1 > 2000000 )
            {
                alert("IMAGE 1 Type :" + ftype1 + " | " + fsize1 + " bites\n(File: " + fname1 + ") Bigger than 2MB! ");
                return false;
            }

            if (fsize2 > 2000000)
            {
                alert("IMAGE 2 Type :" + ftype2 + " | " + fsize2 + " bites\n(File: " + fname2 + ") Bigger than 2MB!");
                return false;
            }

            if (fsize3 > 2000000)
            {
                alert("IMAGE 3 Type :" + ftype3 + " | " + fsize3 + " bites\n(File: " + fname3 + ") Bigger than 2MB!");
                return false;
            }
        }
        else {
            alert("Please upgrade your browser, because your current browser lacks some new features we need!");
            return false;
        }
        return true;

    }

</script>